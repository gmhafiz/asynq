package email

import (
	"encoding/json"
	"io"
)

// Request is a common struct used by all incoming messages.
type Request struct {

	// SentByUserID keeps track of who is sending the message
	SentByUserID uint64 `json:"sent_by" validate:"required"`

	// Type tells what kind of UoW it is. They are defined by constants in
	// task/tasks.go and must be followed by all services using this Producer
	// api.
	Type string `json:"type" validate:"required"`

	// While we send it by header request, we pass along the request UUID
	// so that we can later delete this key once the task is successfully
	// completed.
	RequestUUID string `json:"request_id" validate:"uuid4,required"`
}

// RefereeRequest user request is parsed into this struct and is different
// from the struct generated by proto compiler.
// Other UoW will also embed Request struct.
// Other parameters are then defined is their own struct, in this case an Email
// struct
type RefereeRequest struct {
	Request
	Parameters Email `json:"email" validate:"required"`
}

// Email is a custom struct concerned with just Email parameters.
type Email struct {
	To      uint64 `json:"to"`
	Subject string `json:"subject" validate:"required"`
	Content string `json:"content" validate:"required"`
}

// Bind is a convenience function to parse incoming user request in JSON format
// to our custom request struct.
func Bind(body io.ReadCloser, b *RefereeRequest) error {
	return json.NewDecoder(body).Decode(b)
}
